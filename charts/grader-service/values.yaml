# Default values for grader-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/tu-wien-datalab/grader-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "grader-service"

serviceAccount:
  # Specifies whether a service account should be created or not
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4010
port: 4010

jupyterhub:
  apiUrl: http://hub:8081/hub/api
  baseUrl: /

db:
  dialect: sqlite
  host: /var/lib/grader-service/grader.db
  url: "sqlite:///grader.db"

gitConfig:
  gitUser: "grader-service"
  gitEmail: "grader-service@mail.com"


gitea:
  # gitea is disabled by default and local git server is used
  enabled: false

  redis-cluster:
    enabled: false
  postgresql:
    enabled: true
  postgresql-ha:
    enabled: false

  persistence:
    enabled: true

  service:
    http:
      type: ClusterIP
      port: 3000
      clusterIP: None
    ssh:
      type: ClusterIP
      port: 2222
      clusterIP: None

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: git.grader.com
        paths:
          - path: /
            pathType: Prefix
    tls: []

  gitea:
    config:
      database:
        DB_TYPE: postgres
      session:
        PROVIDER: db
      cache:
        ADAPTER: memory
      queue:
        TYPE: level
      indexer:
        ISSUE_INDEXER_TYPE: bleve
        REPO_INDEXER_ENABLED: true
      service:
        DISABLE_REGISTRATION: true
        REQUIRE_SIGNIN_VIEW: false
        SHOW_REGISTRATION_BUTTON: false
      server:
        SSH_DOMAIN: gitea-ssh.grader.com


volumePermissions:
  enabled: true

concurrentGradingTasks: 5

autogradeExecutorClass: KubeAutogradeExecutor
kubeAutogradeExecutor:
  image: ghcr.io/tu-wien-datalab/grader-service-labextension
  tag: latest
  extraVolumes: ""
  extraVolumeMounts: ""
  resolveImageName: null

extraConfig: ""

requestHandlerConfig:
  max_buffer_size: 104857600
  max_body_size: 104857600

# lti
ltiSyncGrades:
  enabled: '{"enable_lti": False, "sync_on_feedback": False}'
  client_id: ""
  token_url: ""
  username_convert: null
  username_match: "user_id"
  token_private_key: ""
  resolve_lti_urls: "None"

logLevel: "INFO"


# pvc
storageClassName: ""
accessMode: "ReadWriteMany"
capacity: "10G"
volume: ""
hostpath: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

